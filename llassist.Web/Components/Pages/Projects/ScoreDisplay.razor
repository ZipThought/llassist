@code {
    [Parameter] public bool IsPositive { get; set; }
    [Parameter] public string BadgeText { get; set; }
    [Parameter] public string ScoreLabel { get; set; }
    [Parameter] public double Score { get; set; }
    [Parameter] public string PositiveColorClass { get; set; }
    [Parameter] public string ReasonText { get; set; }
}

<div class="score-display">
    <div class="d-flex justify-content-between align-items-center mb-1">
        <span class="badge @(IsPositive ? PositiveColorClass : "bg-secondary") me-2">
            @BadgeText
        </span>
        <span class="text-end">
            <span class="me-2">@ScoreLabel:</span>
            <span class="score-value fw-bold fs-6">@(Math.Round(Score * 100, 1))%</span>
        </span>
    </div>
    <div class="progress" style="height: 10px;">
        <div class="progress-bar @(IsPositive ? PositiveColorClass : "bg-secondary")"
            role="progressbar" 
            style="width: @(Score * 100)%"
            aria-valuenow="@(Score * 100)"
            aria-valuemin="0"
            aria-valuemax="100">
        </div>
    </div>
    @if (!string.IsNullOrEmpty(ReasonText))
    {
        <div class="@(IsPositive ? "text-dark fw-semibold" : "text-muted small") mt-1">
            @ReasonText
        </div>
    }
</div>